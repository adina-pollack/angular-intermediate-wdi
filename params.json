{"name":"A More Complex Angular App","tagline":"","body":"### Are you ready to build the next hot Silicon-Valley Startup: Blitter?\r\n\r\nIf there's one VC space that is wide open for almost instant success, it's social networking. You pretty much build a social networking site of any kind, and Bam! you're worth a billion dollars.\r\n\r\nSo let's do this. Your job is to build an angular site that pulls a list of 'bleets' from a backend (http://blittertime.herokuapp.com), and displays them in a list on a page. Your page should also have the ability to add new bleets, delete bleets, and 'like' a bleet. You'll need to build a custom directive to display each individual 'bleet'. And, you should be able to click on a bleet and display a detail page for just that individual bleet -- and you should use ui-router to do this.\r\n\r\nThe steps for completing your app are as follows:\r\n\r\n1. Setup an angular project either by hand (not recommended), or using a starter pack of your choice. Some recommendations include: [NG-Boilerplate](https://github.com/ngbp/ngbp), [Yeoman Angular](https://github.com/yeoman/generator-angular), [Yeoman Gulp Angular](https://github.com/Swiip/generator-gulp-angular)\r\n2. If your seed doesn't include UI-Router, install it via bower: [Bower](http://bower.io/), [UI-Router Project](https://github.com/angular-ui/ui-router)\r\n3. Setup two routes with UI-Route, using $stateProvider, for the list page and the detail page of bleets. [UI-Router Wiki](https://github.com/angular-ui/ui-router/wiki)\r\n4. Insert a ui-view into your main index.html. \r\n5. Setup a controller for each of your routes. The controller will need to load resources from the backend using $http, $resource, or Restangular. [Angular Tutorial Talking to Backend](https://docs.angularjs.org/tutorial/step_11), [$http Documentation](https://docs.angularjs.org/api/ng/service/$http), [$resource documentation](https://docs.angularjs.org/api/ngResource/service/$resource), [Restangular](https://github.com/mgonto/restangular)\r\n6. Setup a form and an event handler to submit new bleets. Use a POST to add the bleets to the api. [Form Documentation](https://docs.angularjs.org/api/ng/directive/form)\r\n7. Build a directive to display individual bleets, along with the delete button and the \"like\" button. The directive should a link function to handle user clicking on the like button and the delete button, and an isolated scope so it can be called like this:\r\n<bleet-display bleet=\"currentBleet\">\r\nWhere 'currentBleet' is the bleet you want to display.\r\n[Directive documentation](https://docs.angularjs.org/guide/directive), [Directive Tutorial](http://tutorials.jenkov.com/angularjs/custom-directives.html)\r\n8. Use a PUT to make a bleet become \"liked\" when a user clicks on a like button.\r\n9. Use a DELETE to remove a bleet when a user clicks on the delete button\r\n10. Use a ui-sref to transition to a seperate bleet detail page (which will admittedly not have any additional detail). [UI-Router API Docs](http://angular-ui.github.io/ui-router/site/#/api/ui.router)\r\n\r\nThe backend can be accessed on blittertime.herokuapp.com. The api documentation is as follows:\r\n\r\n```\r\nGET /bleets.json\r\nResponse:\r\n200 OK\r\n{\r\n  \"bleets\": [\r\n    {\r\n      \"id\": 1,\r\n      \"content\": \"Text of bleet\",\r\n      \"liked\": false\r\n    },\r\n    ...\r\n  ]\r\n}\r\n```\r\n\r\n```\r\nGET /bleets/1.json\r\nResponse:\r\n200 OK\r\n{\r\n  \"bleet\": {\r\n    \"id\": 1,\r\n    \"content\": \"Text of bleet\",\r\n    \"liked\": false\r\n  }\r\n}\r\n```\r\n\r\n```\r\nPOST /bleets.json\r\nRequest:\r\n{\r\n  \"bleet\": {\r\n    \"content\": \"Text of bleet\",\r\n    \"liked\": false\r\n  }\r\n}\r\nResponse:\r\n201 Created\r\n{\r\n  \"bleet\": {\r\n    \"id\": 1,\r\n    \"content\": \"Text of bleet\",\r\n    \"liked\": false\r\n  }\r\n}\r\n```\r\n\r\n```\r\nPUT /bleets/1.json\r\nRequest:\r\n{\r\n  \"bleet\": {\r\n    \"id\": 1\r\n    \"content\": \"Text of bleet\",\r\n    \"liked\": false\r\n  }\r\n}\r\nResponse:\r\n{\r\n  \"bleet\": {\r\n    \"id\": 1,\r\n    \"content\": \"Text of bleet\",\r\n    \"liked\": false\r\n  }\r\n}\r\n```\r\n\r\n```\r\nDELETE /bleets/1.json\r\nPUT /bleets/1.json\r\nResponse:\r\n// deleted bleet\r\n{\r\n  \"bleet\": {\r\n    \"id\": 1,\r\n    \"content\": \"Text of bleet\",\r\n    \"liked\": false\r\n  }\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}